리액트 컴포넌트 스타일링
 - 일반 CSS : 가장 기본적인 방식
 - Sass : 자주 사용되는 CSS전처리기 중 하나 / 확장된 CSS문법을 사용 더욱 쉽게 작성 가능
 - CSS Module : 스타일을 작성할 때 CSS클래스가 다른 
    CSS클래스의 이름과 절대 충돌하지 않도록 파일마다 고유한 이름을 자동으로 생성해줌
 - Styled-components : 스타일을 자바스크립트 파일에 내장시키는 방식 / 
    스타일을 작성함과 동시에 해당 스타일이 적용된 컴포넌트를 만들 수 있음
---------------------------------------------------------------------------------------------------
프로젝트의 시작 
- npx create-react-app / yarn create-react-app 등 프로젝트 파일 생성
- 이름짓는 규칙 : 이름 - 클래스 형태로 지어져있다(BEM 네이밍 방식과 유사)
- CSS Selecor : CSS 클래스가 특정 클래스 내부에 있는 경우에만 스타일 적용 가능

------------------------------------------------------------------------------------------------
Sass
 - Sass에서는 두가지 확장자 .scss / .sass를 지원함
 - 설치 npm i sass
 - utils 함수 분리하기
    - 여러 파일에서 사용될 Sass 변수 및 믹스인은 다른 파일로 따로 분리하여 작성
----------------------------------------------------------------------------------------------------
node-modules에서 라이브러리 불러오기
 - Sass 장점 : 라이브러리를 쉽게 불러와서 사용할 수 있다.
  ex) "../../../nodemodules/library/styles"; -> "~library/styles";

----------------------------------------------------------------------------------------------
CSS Module (react 내장함수)
- CSS Module은 CSS를 불러와서 사용할 때 클래스이름을 고유한 값,
    [파일 이름]_[클래스 이름]_[해시값] 형태로 자동으로 만들어
    컴포넌트 스타일 클래스 이름이 중첩되는 현상을 방지
- 적용방법 : 파일명.module.css
- CSS Module이 아닌 곳에서 :local을 사용하여 CSS Module을 사용 가능
-------------------------------------------------------------------------------------------------
classnames
 - CSS클래스를 조건부로 설정할 때 매우 유용한 라이브러리
  CSS Module을 사용할 때 이 라이브러리를 사용하면 여러 클래스를 적용할 떄 매우 편리함
  설치 - mpn i classnames

-----------------------------------------------------------------------------------------------
styled-components (CSS-in-Js)
 - 자바스크립트 안에 스타일을 선언하는 방식
 - 현재 개발자들이 CSS-in-JS방식 중 가장 선호하는 방식 중 하나 (emotion이 그나마 비슷함)
 - Tagged 템플릿 (``) 내부에 작성을 해야 함수를 인식 할 수 있다.
 ex) const 컴포넌트명 = styled.사용컴포넌트명(input,button,div등등)
     `CSS문구 + 각종 조건문`
--------------------------------------------------------------------------------------------


