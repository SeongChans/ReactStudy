let Router,postsCtrl,checkLoggedIn;_b35‍.x([["default",()=>_b35‍.o]]);_b35‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_b35‍.w("./posts.ctrl",[["*",null,function(v){postsCtrl=v}]]);_b35‍.w("../../lib/checkLoggedIn",[["default",["checkLoggedIn"],function(v){checkLoggedIn=v}]]);



const posts = new Router();

posts.get('/', postsCtrl.list);
posts.post('/', checkLoggedIn, postsCtrl.write);

const post = new Router();
posts.get('/', postsCtrl.read);
posts.delete('/', checkLoggedIn, postsCtrl.remove);
posts.patch('/', checkLoggedIn, postsCtrl.update);

posts.use('/:id', postsCtrl.checkObjectId, post.routes())

_b35‍.d(posts);

/* 리팩토링 전


import Router from 'koa-router';
import * as postsCtrl from './posts.ctrl';

const posts = new Router();

posts.get('/', postsCtrl.list);
posts.post('/', postsCtrl.write);

const post = new Router(); // /api/posts/:id
posts.get('/:id', postsCtrl.read);
posts.delete('/:id', postsCtrl.remove);
//posts.put('/:id', postsCtrl.replace);
posts.patch('/:id', postsCtrl.update);

posts.use('/:id', postsCtrl.checkObjectId, post.routes());

export default posts;
*/